1. Relasi dan Fungsi
-Relasi
Relasi adalah suatu aturan yang menghubungkan anggota suatu himpunan dengan anggota himpunan lainnya. Misalnya, relasi “lebih besar dari” pada himpunan bilangan bulat.

Contoh: Jika A = {1, 2, 3}, B = {2, 3, 4}, maka relasi R = {(a, b) | a < b} dari A ke B adalah:
R = {(1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 4)}

-Fungsi
Fungsi adalah relasi khusus dari A ke B, di mana setiap elemen di A memiliki tepat satu pasangan di B.

Notasi: 
𝑓: 𝐴→𝐵
f:A→B, dengan aturan 𝑓(𝑥=𝑦)
f(x)=y
Contoh: 
𝑓(𝑥)=𝑥2
f(x)=x2, 
A = {1, 2, 3} → hasil: f(1)=1, f(2)=4, f(3)=9

2. Invers Fungsi
Fungsi invers adalah fungsi yang membalik fungsi asli. Jika 
𝑓(𝑥)=𝑦
f(x)=y, maka inversnya adalah 
𝑓−1(𝑦)=𝑥
f −1 (y)=x.

Syarat Fungsi Invers:
Fungsi harus bijektif (injektif dan surjektif)

Contoh:
Jika 
𝑓(𝑥)=2𝑥+3
f(x)=2x+3, maka inversnya:

𝑦=2𝑥+3
y=2x+3 → 𝑥= 𝑦−32
x= 2y−3
​
 

Jadi, 
𝑓−1(𝑥)=𝑥−32
f −1 (x)= 2x−3
​
 

3. Komposisi Fungsi
Komposisi fungsi adalah penggabungan dua fungsi, misalnya:

(𝑓∘𝑔)(𝑥)=𝑓(𝑔(𝑥))
(f∘g)(x)=f(g(x))

Contoh:
Jika:

𝑓(𝑥)=2𝑥+1
f(x)=2x+1

𝑔(𝑥)=𝑥2
g(x)=x 2
 

Maka: 
(𝑓∘𝑔)(𝑥)=𝑓(𝑔(𝑥))=𝑓(𝑥2)=2𝑥2+1
(f∘g)(x)=f(g(x))=f(x 2 )=2x 2 +1


4. Library Pendukung Implementasi Fungsi pada Python
 a. math Library
Library built-in Python untuk fungsi matematika dasar

Contoh: math.sin(), math.cos(), math.exp()

Kelebihan:
Akurat untuk operasi skalar (satu nilai)

Kapan digunakan?
Saat hanya menghitung 1 nilai (bukan vektor)

Misalnya: math.sin(math.pi/2)

 b. numpy Library
Library powerful untuk komputasi numerik berbasis array

Contoh: numpy.sin(), numpy.cos(), numpy.exp()

Kelebihan:
Bisa menghitung fungsi secara vektorisasi (langsung pada array)

Sangat efisien untuk perhitungan banyak nilai sekaligus

Kapan digunakan?
Saat domain fungsi berupa array nilai

Cocok digunakan untuk plotting grafik fungsi

-Menggunakan numpy untuk menyusun domain fungsi
Contoh: 
import numpy as np
x = np.linspace(-10, 10, 100)  adalah untuk Membuat 100 titik antara -10 dan 10

-Perbedaan np.linspace() dan np.arange()
Fitur	np.linspace()	np.arange()
Berdasarkan	Jumlah titik (num of samples)	Langkah antar titik (step size)
Cocok untuk	Grafik kontinu (trigonometri, kuadrat)	Fungsi diskrit (domain bilangan bulat)
Contoh	np.linspace(0, 1, 5) → 0.0, 0.25...	np.arange(0, 1, 0.2) → 0.0, 0.2...

c. Matplotlib
matplotlib adalah library visualisasi data di Python yang sangat populer dan banyak digunakan untuk membuat berbagai jenis grafik, seperti:
	-	Grafik garis (line chart)
	-	Diagram batang (bar chart)
	-	Grafik sebar (scatter plot)
	-	Histogram, dan lainnya
Untuk praktikum Matematika Diskrit, kita banyak menggunakan grafik fungsi matematis, terutama grafik garis dan kurva.
Sub-library pyplot

Biasanya kita mengimpor matplotlib.pyplot dengan alias:
import matplotlib.pyplot as plt
plt ini digunakan untuk mengakses fungsi-fungsi utama pembuatan grafik, seperti:
	-	plot() → membuat grafik garis
	-	title(), xlabel(), ylabel() → memberi judul dan label sumbu
	-	legend() → memberi keterangan kurva
	-	grid() → menampilkan garis kisi
	-	show() → menampilkan grafik
